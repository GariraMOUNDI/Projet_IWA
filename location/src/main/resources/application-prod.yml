server :
  port : ${PORT:5000}
spring:
  datasource:
    url: ${DATABASE_URL}
#    username: projet_iwa
#    password: projet_iwa
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
      show-sql: true
  kafka:
    bootstrap-servers: ${kafka_server}
    consumer:
      group-id: ${kafka_group_id}
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: SCRAM-SHA-256
        jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="${kafka_username}" password="${kafka_password}";
    template:
      default-topic: jip6qp3z-default

keycloak:
  auth-server-url: ${keycloak_server}
  realm: ${keycloak_realm}
  resource: ${keycloak_client}
  credentials:
    secret: ${keycloak_client_secret}
  public-client: true
  ssl-required: external
  confidential-port: 0
  principal-attribute: preferred_username
  use-resource-role-mappings: true
  bearer-only: true


covid-alert :
  location-topic: ${location_topic}
  cluster-topic: ${cluster_topic}
  alert-topic: ${alert_topic}

#logging.level.org.springframework.security=DEBUG

